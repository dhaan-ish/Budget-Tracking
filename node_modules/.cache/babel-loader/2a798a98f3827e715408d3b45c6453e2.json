{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactProject\\\\ejtos-react_budget_app\\\\src\\\\components\\\\Budget.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport { AppContext } from '../context/AppContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Budget = () => {\n  _s();\n\n  const {\n    budget,\n    currency,\n    dispatch\n  } = useContext(AppContext);\n  const [newBudget, setNewBudget] = useState(budget);\n  const {\n    expenses\n  } = useContext(AppContext); // Function to format the budget in the selected currency\n\n  const formatCurrency = amount => {\n    switch (currency) {\n      case '$':\n        return `$${amount}`;\n\n      case '£':\n        return `£${amount}`;\n\n      case '€':\n        return `€${amount}`;\n\n      case '₹':\n        return `₹${amount}`;\n\n      default:\n        return `£${amount}`;\n      // Default to Pound if currency is not recognized\n    }\n  };\n\n  const handleBudgetChange = event => {\n    const enteredBudget = parseInt(event.target.value); // Ensure the entered budget is not lower than the amount spent so far\n    // Set the maximum limit to 20,000\n\n    if (enteredBudget > 20000) {\n      alert(`Budget cannot exceed 20,000.`);\n      return;\n    }\n\n    setNewBudget(enteredBudget);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"alert alert-secondary\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: [currency, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      step: \"10\",\n      value: newBudget,\n      onChange: handleBudgetChange // Ensure the minimum is the amount spent so far\n      ,\n      max: 20000 // Set the maximum limit to 20,000\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Budget, \"ReHCioQBu0MjHzktZkbFTrh4R1I=\");\n\n_c = Budget;\nexport default Budget;\n\nvar _c;\n\n$RefreshReg$(_c, \"Budget\");","map":{"version":3,"names":["React","useContext","useState","AppContext","Budget","budget","currency","dispatch","newBudget","setNewBudget","expenses","formatCurrency","amount","handleBudgetChange","event","enteredBudget","parseInt","target","value","alert"],"sources":["D:/ReactProject/ejtos-react_budget_app/src/components/Budget.js"],"sourcesContent":["import React, { useContext, useState } from 'react';\r\nimport { AppContext } from '../context/AppContext';\r\n\r\nconst Budget = () => {\r\n    const { budget, currency, dispatch } = useContext(AppContext);\r\n    const [newBudget, setNewBudget] = useState(budget);\r\n    const { expenses } = useContext(AppContext);\r\n\r\n    // Function to format the budget in the selected currency\r\n    const formatCurrency = (amount) => {\r\n        switch (currency) {\r\n            case '$':\r\n                return `$${amount}`;\r\n            case '£':\r\n                return `£${amount}`;\r\n            case '€':\r\n                return `€${amount}`;\r\n            case '₹':\r\n                return `₹${amount}`;\r\n            default:\r\n                return `£${amount}`; // Default to Pound if currency is not recognized\r\n        }\r\n    };\r\n\r\n    const handleBudgetChange = (event) => {\r\n        const enteredBudget = parseInt(event.target.value);\r\n\r\n        // Ensure the entered budget is not lower than the amount spent so far\r\n    \r\n        \r\n\r\n        // Set the maximum limit to 20,000\r\n        if (enteredBudget > 20000) {\r\n            alert(`Budget cannot exceed 20,000.`);\r\n            return;\r\n        }\r\n\r\n        setNewBudget(enteredBudget);\r\n    }\r\n\r\n    return (\r\n        <div className='alert alert-secondary'>\r\n            <span>{currency} </span>\r\n            <input\r\n                type=\"number\"\r\n                step=\"10\"\r\n                value={newBudget}\r\n                onChange={handleBudgetChange}\r\n                // Ensure the minimum is the amount spent so far\r\n                max={20000} // Set the maximum limit to 20,000\r\n            ></input>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Budget;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,UAAT,QAA2B,uBAA3B;;;AAEA,MAAMC,MAAM,GAAG,MAAM;EAAA;;EACjB,MAAM;IAAEC,MAAF;IAAUC,QAAV;IAAoBC;EAApB,IAAiCN,UAAU,CAACE,UAAD,CAAjD;EACA,MAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAACG,MAAD,CAA1C;EACA,MAAM;IAAEK;EAAF,IAAeT,UAAU,CAACE,UAAD,CAA/B,CAHiB,CAKjB;;EACA,MAAMQ,cAAc,GAAIC,MAAD,IAAY;IAC/B,QAAQN,QAAR;MACI,KAAK,GAAL;QACI,OAAQ,IAAGM,MAAO,EAAlB;;MACJ,KAAK,GAAL;QACI,OAAQ,IAAGA,MAAO,EAAlB;;MACJ,KAAK,GAAL;QACI,OAAQ,IAAGA,MAAO,EAAlB;;MACJ,KAAK,GAAL;QACI,OAAQ,IAAGA,MAAO,EAAlB;;MACJ;QACI,OAAQ,IAAGA,MAAO,EAAlB;MAAqB;IAV7B;EAYH,CAbD;;EAeA,MAAMC,kBAAkB,GAAIC,KAAD,IAAW;IAClC,MAAMC,aAAa,GAAGC,QAAQ,CAACF,KAAK,CAACG,MAAN,CAAaC,KAAd,CAA9B,CADkC,CAGlC;IAIA;;IACA,IAAIH,aAAa,GAAG,KAApB,EAA2B;MACvBI,KAAK,CAAE,8BAAF,CAAL;MACA;IACH;;IAEDV,YAAY,CAACM,aAAD,CAAZ;EACH,CAdD;;EAgBA,oBACI;IAAK,SAAS,EAAC,uBAAf;IAAA,wBACI;MAAA,WAAOT,QAAP;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MACI,IAAI,EAAC,QADT;MAEI,IAAI,EAAC,IAFT;MAGI,KAAK,EAAEE,SAHX;MAII,QAAQ,EAAEK,kBAJd,CAKI;MALJ;MAMI,GAAG,EAAE,KANT,CAMgB;;IANhB;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAaH,CAlDD;;GAAMT,M;;KAAAA,M;AAoDN,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}