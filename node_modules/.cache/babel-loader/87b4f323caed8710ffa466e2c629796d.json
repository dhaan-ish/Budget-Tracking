{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactProject\\\\ejtos-react_budget_app\\\\src\\\\components\\\\Budget.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport { AppContext } from '../context/AppContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Budget = () => {\n  _s();\n\n  const {\n    budget,\n    currency,\n    dispatch,\n    totalExpenses\n  } = useContext(AppContext);\n  const [newBudget, setNewBudget] = useState(budget); // Function to format the budget in the selected currency\n\n  const formatCurrency = amount => {\n    switch (currency) {\n      case '$':\n        return `$${amount}`;\n\n      case '£':\n        return `£${amount}`;\n\n      case '€':\n        return `€${amount}`;\n\n      case '₹':\n        return `₹${amount}`;\n\n      default:\n        return `£${amount}`;\n      // Default to Pound if currency is not recognized\n    }\n  };\n\n  const handleBudgetChange = event => {\n    const enteredBudget = parseInt(event.target.value); // Ensure the entered budget is not lower than the amount spent so far\n\n    if (enteredBudget < totalExpenses) {\n      alert(`Budget cannot be lower than the amount spent so far.`);\n      return;\n    } // Set the maximum limit to 20,000\n\n\n    if (enteredBudget > 20000) {\n      alert(`Budget cannot exceed 20,000.`);\n      return;\n    }\n\n    setNewBudget(enteredBudget);\n  };\n\n  const handleFormSubmit = event => {\n    event.preventDefault(); // Prevent the default form submission\n    // Handle the budget change as needed\n    // You can call the dispatch here to update the budget in your context if necessary\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleFormSubmit,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-secondary\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [currency, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        step: \"10\",\n        value: newBudget,\n        onChange: handleBudgetChange // Ensure the minimum is the amount spent so far\n        ,\n        max: 20000 // Set the maximum limit to 20,000\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: {\n          display: 'none'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Budget, \"8O3QBhPd4rbZmM6OaUALMqq6jqM=\");\n\n_c = Budget;\nexport default Budget;\n\nvar _c;\n\n$RefreshReg$(_c, \"Budget\");","map":{"version":3,"names":["React","useContext","useState","AppContext","Budget","budget","currency","dispatch","totalExpenses","newBudget","setNewBudget","formatCurrency","amount","handleBudgetChange","event","enteredBudget","parseInt","target","value","alert","handleFormSubmit","preventDefault","display"],"sources":["D:/ReactProject/ejtos-react_budget_app/src/components/Budget.js"],"sourcesContent":["import React, { useContext, useState } from 'react';\r\nimport { AppContext } from '../context/AppContext';\r\n\r\nconst Budget = () => {\r\n    const { budget, currency, dispatch, totalExpenses } = useContext(AppContext);\r\n    const [newBudget, setNewBudget] = useState(budget);\r\n\r\n    // Function to format the budget in the selected currency\r\n    const formatCurrency = (amount) => {\r\n        switch (currency) {\r\n            case '$':\r\n                return `$${amount}`;\r\n            case '£':\r\n                return `£${amount}`;\r\n            case '€':\r\n                return `€${amount}`;\r\n            case '₹':\r\n                return `₹${amount}`;\r\n            default:\r\n                return `£${amount}`; // Default to Pound if currency is not recognized\r\n        }\r\n    };\r\n\r\n    const handleBudgetChange = (event) => {\r\n        const enteredBudget = parseInt(event.target.value);\r\n\r\n        // Ensure the entered budget is not lower than the amount spent so far\r\n        if (enteredBudget < totalExpenses) {\r\n            alert(`Budget cannot be lower than the amount spent so far.`);\r\n            return;\r\n        }\r\n\r\n        // Set the maximum limit to 20,000\r\n        if (enteredBudget > 20000) {\r\n            alert(`Budget cannot exceed 20,000.`);\r\n            return;\r\n        }\r\n\r\n        setNewBudget(enteredBudget);\r\n    }\r\n\r\n    const handleFormSubmit = (event) => {\r\n        event.preventDefault(); // Prevent the default form submission\r\n        // Handle the budget change as needed\r\n        // You can call the dispatch here to update the budget in your context if necessary\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleFormSubmit}>\r\n            <div className='alert alert-secondary'>\r\n                <span>{currency} </span>\r\n                <input\r\n                    type=\"number\"\r\n                    step=\"10\"\r\n                    value={newBudget}\r\n                    onChange={handleBudgetChange}\r\n                    // Ensure the minimum is the amount spent so far\r\n                    max={20000} // Set the maximum limit to 20,000\r\n                />\r\n                <button type=\"submit\" style={{ display: 'none' }}></button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Budget;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,UAAT,QAA2B,uBAA3B;;;AAEA,MAAMC,MAAM,GAAG,MAAM;EAAA;;EACjB,MAAM;IAAEC,MAAF;IAAUC,QAAV;IAAoBC,QAApB;IAA8BC;EAA9B,IAAgDP,UAAU,CAACE,UAAD,CAAhE;EACA,MAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAACG,MAAD,CAA1C,CAFiB,CAIjB;;EACA,MAAMM,cAAc,GAAIC,MAAD,IAAY;IAC/B,QAAQN,QAAR;MACI,KAAK,GAAL;QACI,OAAQ,IAAGM,MAAO,EAAlB;;MACJ,KAAK,GAAL;QACI,OAAQ,IAAGA,MAAO,EAAlB;;MACJ,KAAK,GAAL;QACI,OAAQ,IAAGA,MAAO,EAAlB;;MACJ,KAAK,GAAL;QACI,OAAQ,IAAGA,MAAO,EAAlB;;MACJ;QACI,OAAQ,IAAGA,MAAO,EAAlB;MAAqB;IAV7B;EAYH,CAbD;;EAeA,MAAMC,kBAAkB,GAAIC,KAAD,IAAW;IAClC,MAAMC,aAAa,GAAGC,QAAQ,CAACF,KAAK,CAACG,MAAN,CAAaC,KAAd,CAA9B,CADkC,CAGlC;;IACA,IAAIH,aAAa,GAAGP,aAApB,EAAmC;MAC/BW,KAAK,CAAE,sDAAF,CAAL;MACA;IACH,CAPiC,CASlC;;;IACA,IAAIJ,aAAa,GAAG,KAApB,EAA2B;MACvBI,KAAK,CAAE,8BAAF,CAAL;MACA;IACH;;IAEDT,YAAY,CAACK,aAAD,CAAZ;EACH,CAhBD;;EAkBA,MAAMK,gBAAgB,GAAIN,KAAD,IAAW;IAChCA,KAAK,CAACO,cAAN,GADgC,CACR;IACxB;IACA;EACH,CAJD;;EAMA,oBACI;IAAM,QAAQ,EAAED,gBAAhB;IAAA,uBACI;MAAK,SAAS,EAAC,uBAAf;MAAA,wBACI;QAAA,WAAOd,QAAP;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QACI,IAAI,EAAC,QADT;QAEI,IAAI,EAAC,IAFT;QAGI,KAAK,EAAEG,SAHX;QAII,QAAQ,EAAEI,kBAJd,CAKI;QALJ;QAMI,GAAG,EAAE,KANT,CAMgB;;MANhB;QAAA;QAAA;QAAA;MAAA,QAFJ,eAUI;QAAQ,IAAI,EAAC,QAAb;QAAsB,KAAK,EAAE;UAAES,OAAO,EAAE;QAAX;MAA7B;QAAA;QAAA;QAAA;MAAA,QAVJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAgBH,CA5DD;;GAAMlB,M;;KAAAA,M;AA8DN,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}