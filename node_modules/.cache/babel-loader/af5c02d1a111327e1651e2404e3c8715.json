{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactProject\\\\ejtos-react_budget_app\\\\src\\\\context\\\\AppContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useReducer } from 'react'; // 5. The reducer - this is used to update the state, based on the action\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AppReducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_EXPENSE':\n      let total_budget = 0;\n      total_budget = state.expenses.reduce((previousExp, currentExp) => {\n        return previousExp + currentExp.cost;\n      }, 0);\n      total_budget = total_budget + action.payload.cost;\n      action.type = \"DONE\";\n\n      if (action.payload.cost < 0) {\n        // Decreasing allocation, no need to check budget limit\n        const updatedExpenses = state.expenses.map(currentExp => {\n          if (currentExp.name === action.payload.name) {\n            return { ...currentExp,\n              cost: action.payload.cost + currentExp.cost\n            };\n          }\n\n          return currentExp;\n        });\n        return { ...state,\n          expenses: updatedExpenses\n        };\n      } else if (total_budget <= state.budget) {\n        // Increasing allocation within budget limit\n        const updatedExpenses = state.expenses.map(currentExp => {\n          if (currentExp.name === action.payload.name) {\n            return { ...currentExp,\n              cost: action.payload.cost + currentExp.cost\n            };\n          }\n\n          return currentExp;\n        });\n        return { ...state,\n          expenses: updatedExpenses\n        };\n      } else {\n        alert(\"Cannot increase the allocation! Out of funds\");\n        return state;\n      }\n\n    case 'RED_EXPENSE':\n      const red_expenses = state.expenses.map(currentExp => {\n        if (currentExp.name === action.payload.name && currentExp.cost - action.payload.cost >= 0) {\n          currentExp.cost = currentExp.cost - action.payload.cost;\n          state.budget = state.budget + action.payload.cost;\n        }\n\n        return currentExp;\n      });\n      action.type = \"DONE\";\n      return { ...state,\n        expenses: [...red_expenses]\n      };\n\n    case 'DELETE_EXPENSE':\n      action.type = \"DONE\";\n      state.expenses.map(currentExp => {\n        if (currentExp.name === action.payload) {\n          state.budget = state.budget + currentExp.cost;\n          currentExp.cost = 0;\n        }\n\n        return currentExp;\n      });\n      return { ...state\n      };\n\n    case 'SET_BUDGET':\n      action.type = \"DONE\";\n      state.budget = action.payload;\n      return { ...state\n      };\n\n    case 'CHG_CURRENCY':\n      action.type = \"DONE\";\n      state.currency = action.payload;\n      return { ...state\n      };\n\n    default:\n      return state;\n  }\n}; // 1. Sets the initial state when the app loads\n\n_c = AppReducer;\nconst initialState = {\n  budget: 2000,\n  expenses: [{\n    id: \"Marketing\",\n    name: 'Marketing',\n    cost: 50\n  }, {\n    id: \"Finance\",\n    name: 'Finance',\n    cost: 300\n  }, {\n    id: \"Sales\",\n    name: 'Sales',\n    cost: 70\n  }, {\n    id: \"Human Resource\",\n    name: 'Human Resource',\n    cost: 40\n  }, {\n    id: \"IT\",\n    name: 'IT',\n    cost: 500\n  }, {\n    id: \"HR\",\n    name: 'HR',\n    cost: 50\n  }],\n  currency: '£'\n};\nexport const AppContext = /*#__PURE__*/createContext(); // 2. Creates the context this is the thing our components import and use to get the state\n\nexport const AppProvider = props => {\n  _s();\n\n  // 4. Sets up the app state. takes a reducer, and an initial state\n  const [state, dispatch] = useReducer(AppReducer, initialState); // 6. Calculate remaining budget\n\n  const totalExpenses = state.expenses.reduce((total, item) => {\n    return total = total + item.cost;\n  }, 0);\n  const remaining = state.budget - totalExpenses;\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      expenses: state.expenses,\n      budget: state.budget,\n      remaining: remaining,\n      dispatch,\n      currency: state.currency,\n      selectedCurrency: state.currency,\n      totalExpenses: totalExpenses // Include selectedCurrency\n\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AppProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c2 = AppProvider;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AppReducer\");\n$RefreshReg$(_c2, \"AppProvider\");","map":{"version":3,"names":["React","createContext","useReducer","AppReducer","state","action","type","total_budget","expenses","reduce","previousExp","currentExp","cost","payload","updatedExpenses","map","name","budget","alert","red_expenses","currency","initialState","id","AppContext","AppProvider","props","dispatch","totalExpenses","total","item","remaining","selectedCurrency","children"],"sources":["D:/ReactProject/ejtos-react_budget_app/src/context/AppContext.js"],"sourcesContent":["import React, { createContext, useReducer } from 'react';\r\n\r\n// 5. The reducer - this is used to update the state, based on the action\r\nexport const AppReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'ADD_EXPENSE':\r\n  let total_budget = 0;\r\n  total_budget = state.expenses.reduce((previousExp, currentExp) => {\r\n    return previousExp + currentExp.cost;\r\n  }, 0);\r\n  total_budget = total_budget + action.payload.cost;\r\n  action.type = \"DONE\";\r\n\r\n  if (action.payload.cost < 0) {\r\n    // Decreasing allocation, no need to check budget limit\r\n    const updatedExpenses = state.expenses.map((currentExp) => {\r\n      if (currentExp.name === action.payload.name) {\r\n        return { ...currentExp, cost: action.payload.cost + currentExp.cost };\r\n      }\r\n      return currentExp;\r\n    });\r\n\r\n    return {\r\n      ...state,\r\n      expenses: updatedExpenses,\r\n    };\r\n  } else if (total_budget <= state.budget) {\r\n    // Increasing allocation within budget limit\r\n    const updatedExpenses = state.expenses.map((currentExp) => {\r\n      if (currentExp.name === action.payload.name) {\r\n        return { ...currentExp, cost: action.payload.cost + currentExp.cost };\r\n      }\r\n      return currentExp;\r\n    });\r\n\r\n    return {\r\n      ...state,\r\n      expenses: updatedExpenses,\r\n    };\r\n  } else {\r\n    alert(\"Cannot increase the allocation! Out of funds\");\r\n    return state;\r\n  }\r\n\r\n\r\n    case 'RED_EXPENSE':\r\n      const red_expenses = state.expenses.map((currentExp) => {\r\n        if (currentExp.name === action.payload.name && currentExp.cost - action.payload.cost >= 0) {\r\n          currentExp.cost = currentExp.cost - action.payload.cost;\r\n          state.budget = state.budget + action.payload.cost;\r\n        }\r\n        return currentExp;\r\n      });\r\n      action.type = \"DONE\";\r\n      return {\r\n        ...state,\r\n        expenses: [...red_expenses],\r\n      };\r\n    case 'DELETE_EXPENSE':\r\n      action.type = \"DONE\";\r\n      state.expenses.map((currentExp) => {\r\n        if (currentExp.name === action.payload) {\r\n          state.budget = state.budget + currentExp.cost;\r\n          currentExp.cost = 0;\r\n        }\r\n        return currentExp;\r\n      });\r\n      return {\r\n        ...state,\r\n      };\r\n    case 'SET_BUDGET':\r\n      action.type = \"DONE\";\r\n      state.budget = action.payload;\r\n      return {\r\n        ...state,\r\n      };\r\n    case 'CHG_CURRENCY':\r\n      action.type = \"DONE\";\r\n      state.currency = action.payload;\r\n      return {\r\n        ...state,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// 1. Sets the initial state when the app loads\r\nconst initialState = {\r\n  budget: 2000,\r\n  expenses: [\r\n    { id: \"Marketing\", name: 'Marketing', cost: 50 },\r\n    { id: \"Finance\", name: 'Finance', cost: 300 },\r\n    { id: \"Sales\", name: 'Sales', cost: 70 },\r\n    { id: \"Human Resource\", name: 'Human Resource', cost: 40 },\r\n    { id: \"IT\", name: 'IT', cost: 500 },\r\n    { id: \"HR\", name: 'HR', cost: 50 },\r\n  ],\r\n  currency: '£',\r\n};\r\n\r\nexport const AppContext = createContext();\r\n\r\n// 2. Creates the context this is the thing our components import and use to get the state\r\nexport const AppProvider = (props) => {\r\n  // 4. Sets up the app state. takes a reducer, and an initial state\r\n  const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n  // 6. Calculate remaining budget\r\n  const totalExpenses = state.expenses.reduce((total, item) => {\r\n    return (total = total + item.cost);\r\n  }, 0);\r\n  const remaining = state.budget - totalExpenses;\r\n\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        expenses: state.expenses,\r\n        budget: state.budget,\r\n        remaining: remaining,\r\n        dispatch,\r\n        currency: state.currency,\r\n        selectedCurrency: state.currency,\r\n        totalExpenses: totalExpenses, // Include selectedCurrency\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}